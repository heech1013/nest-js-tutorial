/* AOP(Aspect Oriented Programming)
 * 횡단 관심사(cross-cutting concern)의 분리를 허용함으로써 모듈성을 증가시키는 것이 목적인 프로그래밍 패러다임.
 *
 * 백엔드 애플리케이션은 갖추어야 할 요구사항을 많이 가지고 있는데, 이를 횡단 관심사라고 부른다.
 * : 사용자 요구사항, 유효성 검사, 로깅, 보안 등.
 * 횡단 관심사를 분리하지 않으면, 애플리케이션 로직과 횡단 관심사의 코드가 뒤죽박죽이 된다.
 * -> 코드 가독성 하락, 모듈 응집성 하락, 유지보수 어려움.
 *
 * Nest에서는 (대표적인 컴포넌트인) 인터셉터로 횡단 관심사와 비즈니스 로직을 쉽게 분리할 수 있다.
 * 인터셉터는 서버로 들어오는 요청과 서버에서 나가는 응답 객체를 가로채서 변경할 수 있다.
 * Nest는 데코레이터를 활용해 AOP를 적용한다.
 */